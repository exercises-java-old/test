<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:os-core="http://www.openspaces.org/schema/core"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.openspaces.org/schema/core
            http://www.openspaces.org/schema/core/openspaces-core.xsd">


    <import resource="classpath*:order-component-service-import.xml"/>
    <import resource="classpath*:market-component-service-import.xml"/>

    <bean name="serviceFrameworkBootstrap" class="com.so4it.gs.rpc.ServiceFrameworkSpringBootstrap">
        <constructor-arg name="dynamicConfiguration" ref="dynamicConfiguration"/>
        <constructor-arg name="imports">
            <list>
                <value type="java.lang.Class">se.lexicon.order.component.service.OrderComponentServiceProvider</value>
                <value type="java.lang.Class">se.lexicon.market.component.service.MarketComponentServiceProvider</value>
            </list>
        </constructor-arg>
        <constructor-arg name="serviceRegistryClient" ref="serviceRegistryApiClient"/>
        <property name="beanContext" ref="frameworksBeanContext"/>
        <property name="serviceBeanStateListeners">
            <list>
                <ref bean="serviceBeanStateRegistry"/>
            </list>
        </property>
    </bean>



</beans>
